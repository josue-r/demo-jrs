name: CI

on:
  push:
    branches: [ co-1234/add-workflow ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'
          server-password: MAVEN_PASSWORD

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -B package

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}.jar
          path: target/${{ github.event.repository.name }}.jar

  deploy-container:

    needs: [ build ]
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: target

      - name: Prepare Docker values
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/josue-r/store-gateway
          TAGS="${DOCKER_IMAGE}"
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to GitHub Packages
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.prep.outputs.tags }}